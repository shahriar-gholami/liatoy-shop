# Generated by Django 4.2.8 on 2025-01-15 11:24

import ckeditor.fields
from django.db import migrations, models
import django.db.models.deletion
import django_jalali.db.models
import shop.models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Announcement',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('subject', models.CharField(blank=True, max_length=250, null=True)),
                ('message', models.TextField()),
                ('is_active', models.BooleanField(default=True)),
                ('created', models.DateTimeField(auto_now_add=True)),
            ],
        ),
        migrations.CreateModel(
            name='BlogCategory',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=250)),
            ],
        ),
        migrations.CreateModel(
            name='BlogPost',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=250)),
                ('slug', models.CharField(max_length=250)),
                ('body', ckeditor.fields.RichTextField(default='insert the post body')),
                ('created_date', models.DateTimeField(auto_now_add=True)),
                ('published', models.BooleanField(default=False)),
                ('meta_description', models.CharField(default='', max_length=500)),
                ('meta_keywords', models.CharField(default='', max_length=500)),
                ('meta_og_title', models.CharField(default='', max_length=250)),
                ('meta_og_description', models.CharField(default='', max_length=1000)),
                ('meta_tc_title', models.CharField(default='', max_length=250)),
                ('meta_tc_description', models.CharField(default='', max_length=250)),
                ('category', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='shop.blogcategory')),
            ],
        ),
        migrations.CreateModel(
            name='Brand',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=250)),
                ('logo', models.ImageField(blank=True, null=True, upload_to=shop.models.brand_upload_path)),
            ],
        ),
        migrations.CreateModel(
            name='CartItem',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('quantity', models.PositiveIntegerField(default=1)),
            ],
        ),
        migrations.CreateModel(
            name='Cashback',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('repetation', models.IntegerField(default=0)),
                ('percent', models.IntegerField(default=0)),
                ('const', models.IntegerField(default=0)),
            ],
        ),
        migrations.CreateModel(
            name='Category',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('is_sub', models.BooleanField(default=False)),
                ('name', models.CharField(max_length=200)),
                ('slug', models.SlugField(max_length=200)),
                ('parent', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='scategory', to='shop.category')),
            ],
            options={
                'verbose_name': 'category',
                'verbose_name_plural': 'categories',
                'ordering': ('name',),
            },
        ),
        migrations.CreateModel(
            name='ContactMessage',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=250)),
                ('familly_name', models.CharField(max_length=250)),
                ('email', models.EmailField(max_length=254)),
                ('phone', models.CharField(max_length=11)),
                ('subject', models.CharField(max_length=250)),
                ('message', ckeditor.fields.RichTextField(default='پیام خود را وارد نمایید.')),
                ('created', models.DateTimeField(auto_now_add=True, null=True)),
                ('is_answered', models.BooleanField(default=False)),
            ],
            options={
                'ordering': ('created',),
            },
        ),
        migrations.CreateModel(
            name='Coupon',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('code', models.CharField(max_length=50, unique=True, verbose_name='کد کوپن')),
                ('start_date', django_jalali.db.models.jDateField(blank=True, null=True, verbose_name='تاریخ شروع')),
                ('end_date', django_jalali.db.models.jDateField(blank=True, null=True, verbose_name='تاریخ پایان')),
                ('discount', models.IntegerField(default=0, verbose_name='میزان تخفیف (تومان)')),
                ('min_cart_volume', models.IntegerField(default=0, verbose_name='حداقل مبلغ سبد خرید (تومان)')),
            ],
        ),
        migrations.CreateModel(
            name='Customer',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('phone_number', models.CharField(max_length=11)),
                ('email', models.EmailField(blank=True, max_length=254, null=True)),
                ('full_name', models.CharField(default='کاربر میهمان', max_length=250)),
                ('otp_token', models.IntegerField(blank=True, null=True)),
                ('is_active', models.BooleanField(default=True)),
                ('is_verified', models.BooleanField(default=False)),
                ('city', models.CharField(default='Tehran', max_length=250)),
                ('zip_code', models.CharField(default='1234567890', max_length=10)),
                ('address', models.CharField(default='نام محله - بلوار اصلی - خیابان اصلی - خیابان فرعی - کوچه - پلاک - واحد', max_length=250)),
                ('created_date', models.DateTimeField(auto_now_add=True, null=True)),
                ('updated_date', models.DateTimeField(auto_now_add=True, null=True)),
                ('wallet_balance', models.IntegerField(blank=True, default=0, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='Delivery',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=250)),
                ('price', models.IntegerField()),
                ('min_cart_free', models.IntegerField(default=2000000)),
                ('min_cart_free_active', models.BooleanField(default=False)),
            ],
        ),
        migrations.CreateModel(
            name='Domain',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('domain', models.CharField(max_length=100)),
                ('is_active', models.BooleanField(default=False)),
                ('created_date', models.DateTimeField(auto_now_add=True)),
            ],
        ),
        migrations.CreateModel(
            name='ExpressDeliveryInterval',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('start_time', models.IntegerField()),
                ('end_time', models.IntegerField()),
                ('total_cap', models.IntegerField(default=100)),
                ('teken_cap', models.IntegerField(default=0)),
            ],
        ),
        migrations.CreateModel(
            name='Faq',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('question', models.CharField(max_length=500)),
                ('answer', models.CharField(max_length=2000)),
            ],
        ),
        migrations.CreateModel(
            name='Feature',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=250)),
                ('value', models.CharField(max_length=250)),
            ],
        ),
        migrations.CreateModel(
            name='Filter',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=250)),
                ('category', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='shop.category')),
            ],
        ),
        migrations.CreateModel(
            name='FilterValue',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('value', models.CharField(max_length=250)),
                ('filter', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='shop.filter')),
            ],
        ),
        migrations.CreateModel(
            name='OrderStatus',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('latest_status', models.CharField(max_length=250)),
            ],
        ),
        migrations.CreateModel(
            name='OtpCode',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('phone_number', models.CharField(max_length=11)),
                ('code', models.PositiveSmallIntegerField()),
                ('created', models.DateTimeField(auto_now=True)),
            ],
            options={
                'ordering': ['-created'],
            },
        ),
        migrations.CreateModel(
            name='Owner',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('phone_number', models.CharField(max_length=11)),
                ('full_name', models.CharField(max_length=250)),
            ],
        ),
        migrations.CreateModel(
            name='PriceRange',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('min_value', models.IntegerField()),
                ('max_value', models.IntegerField()),
            ],
        ),
        migrations.CreateModel(
            name='Product',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=200)),
                ('slug', models.CharField(max_length=200)),
                ('description', ckeditor.fields.RichTextField()),
                ('features', ckeditor.fields.RichTextField()),
                ('brand', models.CharField(blank=True, default='متفرقه', max_length=255, null=True)),
                ('price', models.IntegerField()),
                ('sales_price', models.IntegerField(blank=True, null=True)),
                ('off_active', models.BooleanField(default=False)),
                ('created', models.DateTimeField(auto_now_add=True)),
                ('updated', models.DateTimeField(auto_now=True)),
                ('views', models.IntegerField(default=0)),
                ('meta_description', models.CharField(blank=True, max_length=500, null=True)),
                ('meta_keywords', models.CharField(blank=True, max_length=500, null=True)),
                ('meta_og_title', models.CharField(blank=True, max_length=250, null=True)),
                ('meta_og_description', models.CharField(blank=True, max_length=1000, null=True)),
                ('meta_tc_title', models.CharField(blank=True, max_length=250, null=True)),
                ('meta_tc_description', models.CharField(blank=True, max_length=250, null=True)),
                ('ref_price', models.IntegerField(blank=True, default=0, null=True)),
                ('stock_alarm_volume', models.IntegerField(blank=True, default=0, null=True)),
                ('category', models.ManyToManyField(to='shop.category')),
            ],
            options={
                'ordering': ('name',),
            },
        ),
        migrations.CreateModel(
            name='ProductColor',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=250)),
                ('color_code', models.CharField(max_length=250)),
            ],
        ),
        migrations.CreateModel(
            name='ProductRefClass',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=250)),
                ('price_coef', models.IntegerField(default=100)),
            ],
        ),
        migrations.CreateModel(
            name='Recommender',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('full_name', models.CharField(max_length=250)),
                ('phone_number', models.CharField(max_length=250)),
                ('created_date', models.DateTimeField(auto_now_add=True)),
                ('balance', models.IntegerField(default=0)),
                ('referal_code', models.CharField(max_length=6)),
            ],
        ),
        migrations.CreateModel(
            name='Services',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('delivery', models.CharField(default='شیوه\u200cهای ارسال متنوع قابل انتخاب توسط شما', max_length=250)),
                ('originality', models.CharField(default='تحویل کالای اصل بدون کوچکترین مغایرت با توضیحات', max_length=250)),
                ('payments', models.CharField(default='درگاه پرداخت امن با پشتیبانی از تمامی کارت\u200cهای بانکی', max_length=250)),
            ],
        ),
        migrations.CreateModel(
            name='Size',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=250)),
            ],
        ),
        migrations.CreateModel(
            name='Store',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=250, unique=True)),
                ('is_active', models.BooleanField(default=False)),
                ('active_days', models.PositiveIntegerField(default=0)),
                ('address', models.CharField(blank=True, max_length=500, null=True)),
                ('country', models.CharField(default='iran', max_length=250)),
                ('city', models.CharField(default='tehran', max_length=250)),
                ('about_description', ckeditor.fields.RichTextField(default='درباره فروشگاه، خدمات و سوابق آن')),
                ('instagram', models.CharField(blank=True, max_length=250, null=True)),
                ('telegram', models.CharField(blank=True, max_length=250, null=True)),
                ('linkedin', models.CharField(blank=True, max_length=250, null=True)),
                ('merchant', models.CharField(blank=True, max_length=250, null=True)),
                ('independent', models.BooleanField(default=False)),
                ('phone_number', models.CharField(blank=True, max_length=250, null=True)),
                ('balance', models.IntegerField(default=0)),
                ('email', models.EmailField(blank=True, max_length=254)),
                ('Layout_body', models.CharField(default='app rtl light-mode scrollable-layout color-menu horizontal', max_length=250)),
                ('layout_sticky', models.CharField(default='header sticky hor-header', max_length=250)),
                ('layout_container', models.CharField(default='main-container container', max_length=250)),
                ('color', models.CharField(default='0,0,0', max_length=250)),
                ('created', models.DateTimeField(auto_now_add=True, null=True)),
                ('meta_description', models.CharField(default='فروشگاه اینترنتی ساخته شده با سایت ساز رایگان پیکوسایت', max_length=500)),
                ('meta_keywords', models.CharField(default='ساخته شده با فروشگاه ساز پیکوسایت, فروشگاه اینترنتی, فروشگاه آنلاین, سایت ساز پیکوسایت', max_length=500)),
                ('meta_og_title', models.CharField(default='فروشگاه اینترنتی ساخته شده با پیکوسایت', max_length=250)),
                ('meta_og_description', models.CharField(default='فروشگاه اینترنتی ساخته شده با پیکوسایت', max_length=1000)),
                ('meta_tc_title', models.CharField(default='فروشگاه اینترنتی ساخته شده با پیکوسایت', max_length=250)),
                ('meta_tc_description', models.CharField(default='فروشگاه اینترنتی ساخته شده با پیکوسایت', max_length=250)),
                ('has_domain', models.BooleanField(default=False)),
                ('has_payment_gw', models.BooleanField(default=False)),
                ('policies', ckeditor.fields.RichTextField(default='در این بخش مهم\u200cترین سیاست\u200cهای فروشگاه را ذکر نمایید. مهم\u200cترین عناوین این بخش شامل سیاست\u200cهای مرجوعی و شیوه\u200cها و بازه زمانی ارسال کالا می\u200cباشند.')),
                ('template_index', models.IntegerField(default=1)),
                ('index_title', models.CharField(blank=True, default='خانه', max_length=250, null=True)),
                ('enamad_code', models.CharField(blank=True, default='none', max_length=1000, null=True)),
                ('domain_msg', models.BooleanField(default=False)),
                ('gw_msg', models.BooleanField(default=False)),
                ('has_notif', models.BooleanField(default=False)),
            ],
        ),
        migrations.CreateModel(
            name='StoreLogoImage',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('alt_name', models.CharField(blank=True, max_length=250, null=True)),
                ('custom_name', models.CharField(blank=True, max_length=250, null=True)),
                ('image', models.ImageField(default='media/11.png', upload_to=shop.models.logo_upload_path)),
                ('created', models.DateTimeField(auto_now_add=True)),
            ],
            options={
                'ordering': ('created',),
            },
        ),
        migrations.CreateModel(
            name='Subscription',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('email', models.EmailField(max_length=254)),
            ],
        ),
        migrations.CreateModel(
            name='Tag',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=200)),
                ('slug', models.CharField(max_length=200)),
                ('is_special', models.BooleanField(default=False)),
            ],
        ),
        migrations.CreateModel(
            name='Ticket',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('subject', models.CharField(max_length=250)),
                ('body', models.TextField()),
                ('is_answered', models.BooleanField(default=False)),
                ('is_closed', models.BooleanField(default=False)),
                ('created_date', models.DateTimeField(auto_now_add=True)),
            ],
        ),
        migrations.CreateModel(
            name='UploadedImages',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('alt_name', models.CharField(blank=True, max_length=250, null=True)),
                ('image', models.ImageField(upload_to='')),
            ],
        ),
        migrations.CreateModel(
            name='WithdrawRecord',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('sheba', models.CharField(max_length=250)),
                ('amount', models.IntegerField()),
                ('created_date', models.DateTimeField(auto_now_add=True)),
                ('is_paid', models.BooleanField(default=False)),
            ],
        ),
        migrations.CreateModel(
            name='Variety',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255)),
                ('stock', models.PositiveIntegerField()),
                ('product', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='shop.product')),
            ],
        ),
        migrations.CreateModel(
            name='TicketReply',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('body', models.CharField(max_length=1000)),
                ('created_date', models.DateTimeField(auto_now_add=True)),
                ('ticket', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='shop.ticket')),
            ],
        ),
        migrations.CreateModel(
            name='Slide',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('alt_name', models.CharField(blank=True, max_length=250, null=True)),
                ('custom_name', models.CharField(blank=True, max_length=250, null=True)),
                ('index', models.PositiveIntegerField(default=1)),
                ('image', models.ImageField(default='media/11.png', upload_to=shop.models.slide_upload_path)),
                ('created', models.DateTimeField(auto_now_add=True)),
                ('category', models.ManyToManyField(to='shop.category')),
                ('tag', models.ManyToManyField(to='shop.tag')),
            ],
            options={
                'ordering': ('created',),
            },
        ),
        migrations.CreateModel(
            name='ProductImage',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('alt_name', models.CharField(blank=True, max_length=2000, null=True)),
                ('custom_name', models.CharField(blank=True, max_length=2000, null=True)),
                ('image', models.ImageField(default='media/11.png', upload_to=shop.models.image_upload_path)),
                ('created', models.DateTimeField(auto_now_add=True)),
                ('product', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='shop.product')),
            ],
            options={
                'ordering': ('created',),
            },
        ),
        migrations.CreateModel(
            name='ProductFilter',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('filter', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='shop.filter')),
                ('product', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='shop.product')),
                ('values', models.ManyToManyField(blank=True, to='shop.filtervalue')),
            ],
        ),
        migrations.AddField(
            model_name='product',
            name='ref_class',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='shop.productrefclass'),
        ),
        migrations.AddField(
            model_name='product',
            name='tags',
            field=models.ManyToManyField(blank=True, to='shop.tag'),
        ),
        migrations.CreateModel(
            name='PostThumbnail',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('alt_name', models.CharField(blank=True, max_length=250, null=True)),
                ('custom_name', models.CharField(blank=True, max_length=250, null=True)),
                ('image', models.ImageField(default='media/11.png', upload_to=shop.models.thumbnail_upload_path)),
                ('created', models.DateTimeField(auto_now_add=True)),
                ('post', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='shop.blogpost')),
            ],
            options={
                'ordering': ('created',),
            },
        ),
        migrations.CreateModel(
            name='Order',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('total_price', models.IntegerField()),
                ('created_date', models.DateTimeField(auto_now_add=True)),
                ('used_coupon', models.BooleanField(default=False)),
                ('status_updated_date', models.DateTimeField(auto_now_add=True)),
                ('reciever_name', models.CharField(blank=True, max_length=250, null=True)),
                ('reciever_familly_name', models.CharField(blank=True, max_length=250, null=True)),
                ('reciever_phone_number', models.CharField(blank=True, max_length=11, null=True)),
                ('reciever_email', models.EmailField(blank=True, max_length=250, null=True)),
                ('reciever_state', models.CharField(blank=True, max_length=250, null=True)),
                ('reciever_city', models.CharField(blank=True, max_length=250, null=True)),
                ('reciever_address', models.CharField(blank=True, max_length=250, null=True)),
                ('reciever_zip_code', models.CharField(blank=True, max_length=250, null=True)),
                ('paid_by_wallet', models.IntegerField(default=0)),
                ('has_express_items', models.BooleanField(default=False)),
                ('has_normal_items', models.BooleanField(default=False)),
                ('delivery_description', models.TextField(blank=True, null=True)),
                ('delivery_cost', models.IntegerField(default=0)),
                ('delivery_off', models.BooleanField(default=False)),
                ('customer', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='shop.customer')),
                ('delivery_method', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='shop.delivery')),
                ('items', models.ManyToManyField(to='shop.cartitem')),
                ('status', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, to='shop.orderstatus')),
            ],
        ),
        migrations.AddField(
            model_name='filtervalue',
            name='product',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='filter_values', to='shop.product'),
        ),
        migrations.CreateModel(
            name='FeaturedCategories',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('categories', models.ManyToManyField(blank=True, to='shop.category')),
            ],
        ),
        migrations.CreateModel(
            name='DefaultCategory',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('is_sub', models.BooleanField(default=False)),
                ('name', models.CharField(max_length=200)),
                ('slug', models.SlugField(max_length=200, unique=True)),
                ('parent', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='scategory', to='shop.defaultcategory')),
            ],
            options={
                'verbose_name': 'category',
                'verbose_name_plural': 'categories',
                'ordering': ('name',),
            },
        ),
        migrations.AddField(
            model_name='customer',
            name='favorites',
            field=models.ManyToManyField(blank=True, to='shop.product'),
        ),
        migrations.CreateModel(
            name='Comment',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('email', models.EmailField(blank=True, max_length=254, null=True)),
                ('body', models.TextField()),
                ('approved', models.BooleanField(default=False)),
                ('created_date', models.DateTimeField(auto_now_add=True)),
                ('product', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='shop.product')),
                ('sender', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='shop.customer')),
            ],
        ),
        migrations.CreateModel(
            name='CategoryImage',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('alt_name', models.CharField(blank=True, max_length=250, null=True)),
                ('image', models.ImageField(default='media/11.png', upload_to=shop.models.category_upload_path)),
                ('created', models.DateTimeField(auto_now_add=True)),
                ('category', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='shop.category')),
            ],
            options={
                'ordering': ('created',),
            },
        ),
        migrations.AddField(
            model_name='cartitem',
            name='variety',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='shop.variety'),
        ),
        migrations.CreateModel(
            name='Cart',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('customer', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='shop.customer')),
                ('items', models.ManyToManyField(blank=True, to='shop.cartitem')),
            ],
        ),
        migrations.CreateModel(
            name='Banner',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('alt_name', models.CharField(blank=True, max_length=250, null=True)),
                ('custom_name', models.CharField(blank=True, max_length=250, null=True)),
                ('index', models.PositiveIntegerField(default=1)),
                ('image', models.ImageField(default='media/11.png', upload_to=shop.models.banner_upload_path)),
                ('created', models.DateTimeField(auto_now_add=True)),
                ('size', models.CharField(default='small', max_length=250)),
                ('category', models.ManyToManyField(to='shop.category')),
                ('tag', models.ManyToManyField(to='shop.tag')),
            ],
            options={
                'ordering': ('created',),
            },
        ),
    ]
